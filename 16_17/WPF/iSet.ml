(**********************************************************************)
(*                 Implementation of an interval set                  *)
(*                          "iSet problem"                            *)
(**********************************************************************)
(*        Author:     Michał Balcerzak             (mb385130)         *)
(*        Reviewer:   Wojciech Kończewski          (wk385794)         *)
(**********************************************************************)

(* Disclaimer!
 * The following code is based on a polymorphic set implementation writter by
 * Xavier Leroy, Nicolas Cannasse, Markus Mottl and is a modification of
 * mentioned work that adds support for "interval sets" that allow to store
 * ranges of integer elements in them. *)

(*** TYPE DEFINITIONS ***)
(* available tree node types *)
(* 'Node' holds - in order - left subtree, node value, right subtree,
   maximum height of all branches and the number of elements in all intervals
   of this tree *)
type t =
  | Empty
  | Node of t * (int * int) * t * int * int


(*** SELECTORS AND CONSTRUCTORS ***)
(** creates a new empty set *)
let empty = Empty

(** returns true if the given set is empty; false - otherwise *)
let is_empty x =
  x = Empty

(** returns a maximum of the given set's tree branches heights *)
let get_height = function
  | Node (_, _, _, h, _) -> h
  | Empty -> 0

(* returns a sum of two given integers; if that sum sum overflows max_int,
   returns max_int instead *)
let rec normplus a b =
  if a >= 0 && max_int - a >= b then a + b else
  if a < 0 && max_int + a >= -b then a + b
  else max_int

(* returns a number of elements in a given set *)
let get_range = function
  | Node (_, _, _, _, r) -> r
  | Empty -> 0

(* returns a number of elements in a given interval *)
let range (st, fn) =
  if st = min_int then normplus (normplus fn (-normplus (2) (st))) 1
  else normplus fn (normplus (1) (-st))

(** creates a new set tree with subtrees 'l' and 'r' and an interval in
    its node equal to 'k' *)
let make l k r =
  let new_range = normplus (normplus (get_range l) (get_range r)) (range k) in
  Node (l, k, r, max (get_height l) (get_height r) + 1, new_range)

(* for two given balanced sets 'l' and 'r' and an interval 'k' returns a new
   balanced tree with subtrees 'l' and 'r' and an interval 'k' in its root *)
let bal l k r =
  let hl = get_height l in
  let hr = get_height r in
  if hl > hr + 2 then
    match l with
    | Node (ll, lk, lr, _, _) ->
      if get_height ll >= get_height lr then make ll lk (make lr k r)
      else
        (match lr with
         | Node (lrl, lrk, lrr, _, _) ->
           make (make ll lk lrl) lrk (make lrr k r)
         | Empty -> assert false)
    | Empty -> assert false
  else if hr > hl + 2 then
    match r with
    | Node (rl, rk, rr, _, _) ->
      if get_height rr >= get_height rl then make (make l k rl) rk rr
      else
        (match rl with
         | Node (rll, rlk, rlr, _, _) ->
           make (make l k rll) rlk (make rlr rk rr)
         | Empty -> assert false)
    | Empty -> assert false
  else make l k r

(* returns a minimal interval of a tree *)
let rec min_elt = function
  | Node (Empty, k, _, _, _) -> k
  | Node (l, _, _, _, _) -> min_elt l
  | Empty -> raise Not_found

(* removes the minimal interval from a tree *)
let rec remove_min_elt = function
  | Node (Empty, _, r, _, _) -> r
  | Node (l, k, r, _, _) -> bal (remove_min_elt l) k r
  | Empty -> invalid_arg "ISet.remove_min_elt"

(* merges two given balanced trees *)
let merge t1 t2 =
  match t1, t2 with
  | Empty, _ -> t2
  | _, Empty -> t1
  | _ ->
    let k = min_elt t2 in
    bal t1 k (remove_min_elt t2)

(* for a given integer 'rng' and a set 't' returns a pair containing:
   - a balanced set without all continuous intervals bigger than 'rng'
   - a smallest element of a continuous interval containing 'rng' or 'rng'
      if such an interval doesn't exist *)
let rec cutoff_l rng = function
  | Node (l, (st, fn), r, _, _) ->
    if normplus fn 1 < rng then (* this and everything on left is smaller *)
      let nr, nk = cutoff_l rng r in
      (bal l (st,fn) nr, nk)
    else if st <= rng then (* right subtree is in added range *)
      (l, st)
    else cutoff_l rng l (* this and left subtree are in range - omit *)
  | Empty -> (Empty, rng)

(* for a given integer 'rng' and a set 't' returns a pair containing:
   - a balanced set without all continuous intervals smaller than 'rng'
   - a biggest element of a continuous interval containing 'rng' or 'rng'
      if such an interval doesn't exist
   code is rewritten into a new function to increase it's readability *)
let rec cutoff_r rng = function
  | Node (l, (st, fn), r, _, _) ->
    if normplus rng 1 < st then     (* this and everything on right is bigger *)
      let nl, nk = cutoff_r rng l in
      (bal nl (st,fn) r, nk)
    else if rng <= fn then                  (* left subtree is in added range *)
      (r, fn)
    else cutoff_r rng r          (* this and left subtree are in range - omit *)
  | Empty -> (Empty, rng)

(** add (x, y) s - returns a set containing the same elements as 's',
    plus all elements of the interval ['x', 'y'] including 'x' and 'y'.
    Assumes 'x' <= 'y'. *)
let rec add (st, fn) =
  if st > fn then failwith "A given pair is not a valid interval! " else
    function
    | Node (l, (tst, tfn), r, h, rng) ->
      if tst <= st && fn <= tfn then           (* whole range is in this node *)
        Node (l, (tst, tfn), r, h, rng) else
      if normplus fn 1 < tst then           (* whole range is in left subtree *)
        let nl = add (st, fn) l in
        bal nl (tst, tfn) r else
      if normplus tfn 1 < st then          (* whole range is in right subtree *)
        let nr = add (st, fn) r in
        bal l (tst, tfn) nr else
      if tst <= st then                                           (* tfn < fn *)
        let nr, nfn = cutoff_r fn r in
        bal l (tst, nfn) nr else
      if fn <= tfn then                                           (* st < tst *)
        let nl, nst = cutoff_l st l in
        bal nl (nst, tfn) r
      else                                      (* both st < tst and tfn < fn *)
        let nl, nst = cutoff_l st l
        and nr, nfn = cutoff_r fn r in
        bal nl (nst, nfn) nr
    | Empty -> Node (Empty, (st, fn), Empty, 1, range (st, fn))

let rec join l v r =
  match (l, r) with
    Empty, _ -> add v r
  | _, Empty -> add v l
  | Node (ll, lv, lr, lh, _), Node (rl, rv, rr, rh, _) ->
    if lh > rh + 2 then bal ll lv (join lr v r) else
    if rh > lh + 2 then bal (join l v rl) rv rr else
      make l v r

(** for a given integer 'x' and a set 't' returns a triple containing:
    - a set of elements smaller than 'x' in 't'
    - a boolean statement whether 't' contains 'x'
    - a set of elements bigger than 'x' in 't' *)
let split x set =
  let rec loop x = function
    | Empty ->
      (Empty, false, Empty)
    | Node (l, (st, fn), r, _, _) ->
      if st < x && x < fn then
        let nl = add (st, x - 1) l
        and nr = add (x + 1, fn) r in
        (nl, true, nr) else
      if st = x then
        if st < fn then (l, true, add (st + 1, fn) r)
        else (l, true, r) else
      if fn = x then
        if st < fn then (add (st, fn - 1) l, true, r)
        else (l, true, r) else
      if x < st then
        let (ll, pres, rl) = loop x l in (ll, pres, join rl (st, fn) r)
      else                                                          (* fn < x *)
        let (lr, pres, rr) = loop x r in (join l (st, fn) lr, pres, rr)
  in
  let setl, pres, setr = loop x set in
  (setl, pres, setr)

(** for an interval and set return a set without elements of a given interval *)
let remove (st, fn) set =
  let l, _, _ = split st set
  and _, _, r = split fn set in
  merge l r

(** returns true if a given set contains a given integer; false - otherwise *)
let mem x set =
  let rec loop = function
    | Node (l, (st, fn), r, _, _) ->
      (st <= x && x <= fn) || loop (if x < st then l else r)
    | Empty -> false in
  loop set

(** returns a minimum of either a number of elements not bigger than a given
    integer in a given set or max_int *)
let below x = function
  | Empty -> 0
  | u ->
    let tree, bx, _ = split x u in
    match tree with
    | Empty -> if bx then 1 else 0
    | Node (_, _, _, _, out) ->
      if bx then normplus 1 out else out

(** returns the list of all continuous intervals of a given set in increasing
    order *)
let elements set =
  let rec loop acc = function
    | Empty -> acc
    | Node(l, k, r, _, _) -> loop (k :: loop acc r) l in
  loop [] set

(*** HIGHER ORDER FUNCTIONS ***)
(** executes 'f' on all continuous intervals in 'set' in increasing order *)
let iter f set =
  let rec loop = function
    | Empty -> ()
    | Node (l, k, r, _, _) -> loop l; f k; loop r in
  loop set


(** [fold f s a] computes [(f xN ... (f x2 (f x1 a))...)], where x1
    ... xN are all continuous intervals of s, in increasing order. *)
let fold f set acc =
  let rec loop acc = function
    | Empty -> acc
    | Node (l, k, r, _, _) ->
      loop (f k (loop acc l)) r in
  loop acc set


(* * * ** ** ** ** ** * * *)
(* * * ** TESTZONE ** * * *)
(* * * ** ** ** ** ** * * *)

  (*
let rec printset = function
  | Node (l, (st, fn), r, h, rng) ->
    begin
      Printf.printf " ";
      for i=0 to h-1 do Printf.printf "(" done;
      printset l;
      Printf.printf " [%d +%d+ %d] " st rng fn;
      (* Printf.printf " [%d %d] " st fn; *)
      printset r;
      for i=0 to h-1 do Printf.printf ")" done;
      Printf.printf " ";
    end
  | Empty -> Printf.printf ("e")

let testsplit a i =
  let x, c, v = split i a in
  printset x;
  Printf.printf " %b " c;
  printset v

let y = add (1, 3) empty
let o = add (7, 9) y
let y = add (-7, -3) o
let o = add (-15, -9) y
let y = add (-37, -33) o
let o = add (-29, -29) y
let a = add (-37, 9) o

let _ =
  let a =
    let y = ref (add (1, 3) empty)
    and a = ref (-4580000000000000000)
    and b = ref (-4160000000000000000) in
    for i=0 to 18 do
      y := add (!a, !b) !y;
      a := normplus !a 500000000000000000;
      b := normplus !b 500000000000000000;
    done; !y in
  printset a;
  Printf.printf "\n\n\n";
  Printf.printf "(%d): %d\n" 0 (below 0 a);
  Printf.printf "(%d): %d\n" (max_int-1) (below (max_int-1) a);
  Printf.printf "(%d): %d\n" (-3000000000) (below (-3000000000) a);
  (* for i=30 to 38 do
     testsplit a i;
     Printf.printf "\n\n";
     done; *)
  (* printset (remove (21, 75) a); *)
*)
(*
let check a = true;;
exception Exc of (int*int*int*int*t);;
let a = empty;;

let a = remove (9,9)a ;; if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 9, 9, 132, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 9, 9, 132, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 9, 9, 132, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 9, 9, 132, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 9, 9, 132, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 9, 9, 132, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 9, 9, 132, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 9, 9, 132, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 9, 9, 132, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 9, 9, 132, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 9, 9, 132, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 9, 9, 132, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 9, 9, 132, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 9, 9, 132, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 9, 9, 132, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 132, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 9, 9, 132, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 9, 9, 132, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 9, 9, 132, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 9, 9, 132, a)) else print_endline("42tu2");;
let a = add (4,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 4, 5, 133, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 4, 5, 133, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 4, 5, 133, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 4, 5, 133, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 4, 5, 133, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 4, 5, 133, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 4, 5, 133, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 4, 5, 133, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 4, 5, 133, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 4, 5, 133, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 4, 5, 133, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 4, 5, 133, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 4, 5, 133, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 4, 5, 133, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 4, 5, 133, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 4, 5, 133, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 4, 5, 133, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 4, 5, 133, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 4, 5, 133, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 4, 5, 133, a)) else print_endline("42");;
let a = remove (-5,-1)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, -1, 134, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, -1, 134, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, -1, 134, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -5, -1, 134, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -5, -1, 134, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -5, -1, 134, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -5, -1, 134, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -5, -1, 134, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -5, -1, 134, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -5, -1, 134, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -5, -1, 134, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -5, -1, 134, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -5, -1, 134, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -5, -1, 134, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -5, -1, 134, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -5, -1, 134, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -5, -1, 134, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -5, -1, 134, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -5, -1, 134, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -5, -1, 134, a)) else print_endline("42");;
let a = add (9,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 9, 9, 135, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 9, 9, 135, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 9, 9, 135, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 9, 9, 135, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 9, 9, 135, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 9, 9, 135, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 9, 9, 135, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 9, 9, 135, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 9, 9, 135, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 9, 9, 135, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 9, 9, 135, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 9, 9, 135, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 9, 9, 135, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 9, 9, 135, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 9, 9, 135, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 135, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 9, 9, 135, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 9, 9, 135, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 9, 9, 135, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 9, 9, 135, a)) else print_endline("42");;
let a = remove (-4,-4)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -4, -4, 136, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -4, -4, 136, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -4, -4, 136, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -4, -4, 136, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -4, -4, 136, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -4, -4, 136, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -4, -4, 136, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -4, -4, 136, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -4, -4, 136, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -4, -4, 136, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -4, -4, 136, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -4, -4, 136, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -4, -4, 136, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -4, -4, 136, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -4, -4, 136, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -4, -4, 136, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -4, -4, 136, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -4, -4, 136, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -4, -4, 136, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -4, -4, 136, a)) else print_endline("42");;
let a = add (-2,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -2, 5, 137, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -2, 5, 137, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -2, 5, 137, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -2, 5, 137, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -2, 5, 137, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -2, 5, 137, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -2, 5, 137, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -2, 5, 137, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -2, 5, 137, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -2, 5, 137, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -2, 5, 137, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -2, 5, 137, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -2, 5, 137, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -2, 5, 137, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -2, 5, 137, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -2, 5, 137, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -2, 5, 137, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -2, 5, 137, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -2, 5, 137, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -2, 5, 137, a)) else print_endline("42");;
let a = remove (1,7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 1, 7, 138, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 1, 7, 138, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 1, 7, 138, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 1, 7, 138, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 1, 7, 138, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 1, 7, 138, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 1, 7, 138, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 1, 7, 138, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 1, 7, 138, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 1, 7, 138, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 1, 7, 138, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, 1, 7, 138, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 1, 7, 138, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 1, 7, 138, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 1, 7, 138, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 1, 7, 138, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 1, 7, 138, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 1, 7, 138, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 1, 7, 138, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 1, 7, 138, a)) else print_endline("42");;
let a = add (-5,3)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, 3, 139, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, 3, 139, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, 3, 139, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -5, 3, 139, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -5, 3, 139, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -5, 3, 139, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -5, 3, 139, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -5, 3, 139, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -5, 3, 139, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -5, 3, 139, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -5, 3, 139, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -5, 3, 139, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -5, 3, 139, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -5, 3, 139, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -5, 3, 139, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -5, 3, 139, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -5, 3, 139, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -5, 3, 139, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -5, 3, 139, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -5, 3, 139, a)) else print_endline("42");;
let a = remove (-7,-2)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -7, -2, 140, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -7, -2, 140, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -7, -2, 140, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -7, -2, 140, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -7, -2, 140, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -7, -2, 140, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -7, -2, 140, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -7, -2, 140, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -7, -2, 140, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -7, -2, 140, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -7, -2, 140, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -7, -2, 140, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -7, -2, 140, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -7, -2, 140, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -7, -2, 140, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -7, -2, 140, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -7, -2, 140, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -7, -2, 140, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -7, -2, 140, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -7, -2, 140, a)) else print_endline("42");;
let a = add (-5,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, 5, 141, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, 5, 141, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, 5, 141, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -5, 5, 141, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -5, 5, 141, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -5, 5, 141, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -5, 5, 141, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -5, 5, 141, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -5, 5, 141, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -5, 5, 141, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -5, 5, 141, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -5, 5, 141, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -5, 5, 141, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -5, 5, 141, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -5, 5, 141, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -5, 5, 141, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -5, 5, 141, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -5, 5, 141, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -5, 5, 141, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -5, 5, 141, a)) else print_endline("42");;
let a = remove (-4,-1)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -4, -1, 142, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -4, -1, 142, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -4, -1, 142, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -4, -1, 142, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -4, -1, 142, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -4, -1, 142, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -4, -1, 142, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -4, -1, 142, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -4, -1, 142, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -4, -1, 142, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -4, -1, 142, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -4, -1, 142, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -4, -1, 142, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -4, -1, 142, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -4, -1, 142, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -4, -1, 142, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -4, -1, 142, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -4, -1, 142, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -4, -1, 142, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -4, -1, 142, a)) else print_endline("42");;
let a = add (-4,8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -4, 8, 143, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -4, 8, 143, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -4, 8, 143, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -4, 8, 143, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -4, 8, 143, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -4, 8, 143, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -4, 8, 143, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -4, 8, 143, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -4, 8, 143, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -4, 8, 143, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -4, 8, 143, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -4, 8, 143, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -4, 8, 143, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -4, 8, 143, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -4, 8, 143, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -4, 8, 143, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -4, 8, 143, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -4, 8, 143, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -4, 8, 143, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -4, 8, 143, a)) else print_endline("42");;
let a = remove (-5,1)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, 1, 144, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, 1, 144, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, 1, 144, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -5, 1, 144, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -5, 1, 144, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -5, 1, 144, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -5, 1, 144, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -5, 1, 144, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -5, 1, 144, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -5, 1, 144, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -5, 1, 144, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -5, 1, 144, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -5, 1, 144, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -5, 1, 144, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -5, 1, 144, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -5, 1, 144, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -5, 1, 144, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -5, 1, 144, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -5, 1, 144, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -5, 1, 144, a)) else print_endline("42");;
let a = add (-5,7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, 7, 145, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, 7, 145, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, 7, 145, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -5, 7, 145, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -5, 7, 145, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -5, 7, 145, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -5, 7, 145, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -5, 7, 145, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -5, 7, 145, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -5, 7, 145, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -5, 7, 145, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -5, 7, 145, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -5, 7, 145, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -5, 7, 145, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -5, 7, 145, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -5, 7, 145, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -5, 7, 145, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -5, 7, 145, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -5, 7, 145, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -5, 7, 145, a)) else print_endline("42");;
let a = remove (3,4)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 3, 4, 146, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 3, 4, 146, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 3, 4, 146, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 3, 4, 146, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 3, 4, 146, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 3, 4, 146, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 3, 4, 146, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 3, 4, 146, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 3, 4, 146, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 3, 4, 146, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 3, 4, 146, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 3, 4, 146, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 3, 4, 146, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 3, 4, 146, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 3, 4, 146, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 3, 4, 146, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 3, 4, 146, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 3, 4, 146, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 3, 4, 146, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 3, 4, 146, a)) else print_endline("42");;
let a = add (-4,-4)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -4, -4, 147, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -4, -4, 147, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -4, -4, 147, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -4, -4, 147, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -4, -4, 147, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -4, -4, 147, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -4, -4, 147, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -4, -4, 147, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -4, -4, 147, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -4, -4, 147, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -4, -4, 147, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -4, -4, 147, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -4, -4, 147, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -4, -4, 147, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -4, -4, 147, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -4, -4, 147, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -4, -4, 147, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -4, -4, 147, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -4, -4, 147, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -4, -4, 147, a)) else print_endline("42");;
let a = remove (8,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 8, 9, 148, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 8, 9, 148, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 8, 9, 148, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 8, 9, 148, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 8, 9, 148, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 8, 9, 148, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 8, 9, 148, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 8, 9, 148, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 8, 9, 148, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 8, 9, 148, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 8, 9, 148, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 8, 9, 148, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 8, 9, 148, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 8, 9, 148, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 8, 9, 148, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 8, 9, 148, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 8, 9, 148, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 8, 9, 148, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 8, 9, 148, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 8, 9, 148, a)) else print_endline("42");;
let a = add (9,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 9, 9, 149, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 9, 9, 149, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 9, 9, 149, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 9, 9, 149, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 9, 9, 149, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 9, 9, 149, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 9, 9, 149, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 9, 9, 149, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 9, 9, 149, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 9, 9, 149, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 9, 9, 149, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 9, 9, 149, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 9, 9, 149, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 9, 9, 149, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 9, 9, 149, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 149, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 9, 9, 149, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 9, 9, 149, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 9, 9, 149, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 9, 9, 149, a)) else print_endline("42");;
let a = remove (4,7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 4, 7, 150, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 4, 7, 150, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 4, 7, 150, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 4, 7, 150, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 4, 7, 150, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 4, 7, 150, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 4, 7, 150, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 4, 7, 150, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 4, 7, 150, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 4, 7, 150, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 4, 7, 150, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 4, 7, 150, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 4, 7, 150, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 4, 7, 150, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 4, 7, 150, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 4, 7, 150, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 4, 7, 150, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 4, 7, 150, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 4, 7, 150, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 4, 7, 150, a)) else print_endline("42");;
let a = add (1,4)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 1, 4, 151, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 1, 4, 151, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 1, 4, 151, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 1, 4, 151, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 1, 4, 151, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 1, 4, 151, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 1, 4, 151, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 1, 4, 151, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 1, 4, 151, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 1, 4, 151, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 1, 4, 151, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 1, 4, 151, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 1, 4, 151, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 1, 4, 151, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 1, 4, 151, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 1, 4, 151, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 1, 4, 151, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 1, 4, 151, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 1, 4, 151, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 1, 4, 151, a)) else print_endline("42");;
let a = remove (0,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 0, 5, 152, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 0, 5, 152, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 0, 5, 152, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 0, 5, 152, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 0, 5, 152, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 0, 5, 152, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 0, 5, 152, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 0, 5, 152, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 0, 5, 152, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 0, 5, 152, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 0, 5, 152, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, 0, 5, 152, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 0, 5, 152, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 0, 5, 152, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 0, 5, 152, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 0, 5, 152, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 0, 5, 152, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 0, 5, 152, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 0, 5, 152, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 0, 5, 152, a)) else print_endline("42");;
let a = add (-3,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -3, 5, 153, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -3, 5, 153, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -3, 5, 153, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -3, 5, 153, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -3, 5, 153, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -3, 5, 153, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -3, 5, 153, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -3, 5, 153, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -3, 5, 153, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -3, 5, 153, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -3, 5, 153, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -3, 5, 153, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -3, 5, 153, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -3, 5, 153, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -3, 5, 153, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -3, 5, 153, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -3, 5, 153, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -3, 5, 153, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -3, 5, 153, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -3, 5, 153, a)) else print_endline("42");;
let a = remove (-6,0)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -6, 0, 154, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -6, 0, 154, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -6, 0, 154, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -6, 0, 154, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -6, 0, 154, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -6, 0, 154, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -6, 0, 154, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -6, 0, 154, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -6, 0, 154, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -6, 0, 154, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -6, 0, 154, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -6, 0, 154, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -6, 0, 154, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -6, 0, 154, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -6, 0, 154, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -6, 0, 154, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -6, 0, 154, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -6, 0, 154, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -6, 0, 154, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -6, 0, 154, a)) else print_endline("42");;
let a = add (0,1)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 0, 1, 155, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 0, 1, 155, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 0, 1, 155, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 0, 1, 155, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 0, 1, 155, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 0, 1, 155, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 0, 1, 155, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 0, 1, 155, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 0, 1, 155, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 0, 1, 155, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 0, 1, 155, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 0, 1, 155, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 0, 1, 155, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 0, 1, 155, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 0, 1, 155, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 0, 1, 155, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 0, 1, 155, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 0, 1, 155, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 0, 1, 155, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 0, 1, 155, a)) else print_endline("42");;
let a = remove (-8,0)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -8, 0, 156, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -8, 0, 156, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -8, 0, 156, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -8, 0, 156, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -8, 0, 156, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -8, 0, 156, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -8, 0, 156, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -8, 0, 156, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -8, 0, 156, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -8, 0, 156, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -8, 0, 156, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -8, 0, 156, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -8, 0, 156, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -8, 0, 156, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -8, 0, 156, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -8, 0, 156, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -8, 0, 156, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -8, 0, 156, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -8, 0, 156, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -8, 0, 156, a)) else print_endline("42");;
let a = add (2,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 2, 5, 157, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 2, 5, 157, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, 2, 5, 157, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 2, 5, 157, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 2, 5, 157, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 2, 5, 157, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 2, 5, 157, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 2, 5, 157, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 2, 5, 157, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 2, 5, 157, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 2, 5, 157, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 2, 5, 157, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 2, 5, 157, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 2, 5, 157, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 2, 5, 157, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 2, 5, 157, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 2, 5, 157, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 2, 5, 157, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 2, 5, 157, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 2, 5, 157, a)) else print_endline("42");;
let a = remove (9,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 9, 9, 158, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 9, 9, 158, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, 9, 9, 158, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 9, 9, 158, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 9, 9, 158, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 9, 9, 158, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 9, 9, 158, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 9, 9, 158, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 9, 9, 158, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 9, 9, 158, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 9, 9, 158, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 9, 9, 158, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 9, 9, 158, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 9, 9, 158, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 9, 9, 158, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 158, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 9, 9, 158, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 9, 9, 158, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, 9, 9, 158, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 9, 9, 158, a)) else print_endline("42");;
let a = add (-4,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -4, 9, 159, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -4, 9, 159, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -4, 9, 159, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -4, 9, 159, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -4, 9, 159, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -4, 9, 159, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -4, 9, 159, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -4, 9, 159, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -4, 9, 159, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -4, 9, 159, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -4, 9, 159, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -4, 9, 159, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -4, 9, 159, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -4, 9, 159, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -4, 9, 159, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -4, 9, 159, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -4, 9, 159, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -4, 9, 159, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -4, 9, 159, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -4, 9, 159, a)) else print_endline("42");;
let a = remove (7,7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 7, 7, 160, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 7, 7, 160, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, 7, 7, 160, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 7, 7, 160, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 7, 7, 160, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 7, 7, 160, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 7, 7, 160, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 7, 7, 160, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 7, 7, 160, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 7, 7, 160, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 7, 7, 160, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 7, 7, 160, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 7, 7, 160, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 7, 7, 160, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 7, 7, 160, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 7, 7, 160, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 7, 7, 160, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 7, 7, 160, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 7, 7, 160, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 7, 7, 160, a)) else print_endline("42");;
let a = add (-8,-8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -8, -8, 161, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -8, -8, 161, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -8, -8, 161, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -8, -8, 161, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -8, -8, 161, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -8, -8, 161, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -8, -8, 161, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -8, -8, 161, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -8, -8, 161, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -8, -8, 161, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -8, -8, 161, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -8, -8, 161, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -8, -8, 161, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -8, -8, 161, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -8, -8, 161, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -8, -8, 161, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -8, -8, 161, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -8, -8, 161, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -8, -8, 161, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -8, -8, 161, a)) else print_endline("42");;
let a = remove (-7,3)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -7, 3, 162, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -7, 3, 162, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -7, 3, 162, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -7, 3, 162, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -7, 3, 162, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -7, 3, 162, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -7, 3, 162, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -7, 3, 162, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -7, 3, 162, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -7, 3, 162, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -7, 3, 162, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -7, 3, 162, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -7, 3, 162, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -7, 3, 162, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -7, 3, 162, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -7, 3, 162, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -7, 3, 162, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -7, 3, 162, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -7, 3, 162, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -7, 3, 162, a)) else print_endline("42");;
let a = add (1,4)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 1, 4, 163, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 1, 4, 163, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 1, 4, 163, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 1, 4, 163, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 1, 4, 163, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 1, 4, 163, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 1, 4, 163, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 1, 4, 163, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 1, 4, 163, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 1, 4, 163, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 1, 4, 163, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 1, 4, 163, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 1, 4, 163, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 1, 4, 163, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 1, 4, 163, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 1, 4, 163, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 1, 4, 163, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 1, 4, 163, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 1, 4, 163, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 1, 4, 163, a)) else print_endline("42");;
let a = remove (9,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 9, 9, 164, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 9, 9, 164, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 9, 9, 164, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 9, 9, 164, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, 9, 9, 164, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, 9, 9, 164, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, 9, 9, 164, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 9, 9, 164, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 9, 9, 164, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 9, 9, 164, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 9, 9, 164, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 9, 9, 164, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 9, 9, 164, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, 9, 9, 164, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 9, 9, 164, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 164, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 9, 9, 164, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 9, 9, 164, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 9, 9, 164, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 9, 9, 164, a)) else print_endline("42");;
let a = add (-10,4)a ;;  if not( (mem (-10) a = true) && check a) then raise (Exc (-10, -10, 4, 165, a)) else  if not( (mem (-9) a = true) && check a) then raise (Exc (-9, -10, 4, 165, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -10, 4, 165, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -10, 4, 165, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -10, 4, 165, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -10, 4, 165, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -10, 4, 165, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -10, 4, 165, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -10, 4, 165, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -10, 4, 165, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -10, 4, 165, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -10, 4, 165, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -10, 4, 165, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -10, 4, 165, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -10, 4, 165, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -10, 4, 165, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -10, 4, 165, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -10, 4, 165, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -10, 4, 165, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -10, 4, 165, a)) else print_endline("42");;
let a = remove (-3,6)a ;;  if not( (mem (-10) a = true) && check a) then raise (Exc (-10, -3, 6, 166, a)) else  if not( (mem (-9) a = true) && check a) then raise (Exc (-9, -3, 6, 166, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -3, 6, 166, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -3, 6, 166, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -3, 6, 166, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -3, 6, 166, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -3, 6, 166, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -3, 6, 166, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -3, 6, 166, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -3, 6, 166, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -3, 6, 166, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -3, 6, 166, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -3, 6, 166, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -3, 6, 166, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -3, 6, 166, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -3, 6, 166, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -3, 6, 166, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -3, 6, 166, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -3, 6, 166, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -3, 6, 166, a)) else print_endline("42");;
let a = add (4,9)a ;;  if not( (mem (-10) a = true) && check a) then raise (Exc (-10, 4, 9, 167, a)) else  if not( (mem (-9) a = true) && check a) then raise (Exc (-9, 4, 9, 167, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 4, 9, 167, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 4, 9, 167, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 4, 9, 167, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 4, 9, 167, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 4, 9, 167, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 4, 9, 167, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 4, 9, 167, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 4, 9, 167, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 4, 9, 167, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, 4, 9, 167, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 4, 9, 167, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 4, 9, 167, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 4, 9, 167, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 4, 9, 167, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 4, 9, 167, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 4, 9, 167, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 4, 9, 167, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 4, 9, 167, a)) else print_endline("42");;
let a = remove (1,1)a ;;  if not( (mem (-10) a = true) && check a) then raise (Exc (-10, 1, 1, 168, a)) else  if not( (mem (-9) a = true) && check a) then raise (Exc (-9, 1, 1, 168, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 1, 1, 168, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 1, 1, 168, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 1, 1, 168, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 1, 1, 168, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 1, 1, 168, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 1, 1, 168, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 1, 1, 168, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 1, 1, 168, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 1, 1, 168, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, 1, 1, 168, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 1, 1, 168, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 1, 1, 168, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 1, 1, 168, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 1, 1, 168, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 1, 1, 168, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 1, 1, 168, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 1, 1, 168, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 1, 1, 168, a)) else print_endline("42");;
let a = add (9,9)a ;;  if not( (mem (-10) a = true) && check a) then raise (Exc (-10, 9, 9, 169, a)) else  if not( (mem (-9) a = true) && check a) then raise (Exc (-9, 9, 9, 169, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 9, 9, 169, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 9, 9, 169, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 9, 9, 169, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 9, 9, 169, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 9, 9, 169, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 9, 9, 169, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, 9, 9, 169, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, 9, 9, 169, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, 9, 9, 169, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, 9, 9, 169, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 9, 9, 169, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 9, 9, 169, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, 9, 9, 169, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 9, 9, 169, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 9, 9, 169, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 9, 9, 169, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 9, 9, 169, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 9, 9, 169, a)) else print_endline("42");;
let a = remove (-10,-7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -10, -7, 170, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -10, -7, 170, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -10, -7, 170, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -10, -7, 170, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -10, -7, 170, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -10, -7, 170, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -10, -7, 170, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -10, -7, 170, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -10, -7, 170, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -10, -7, 170, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -10, -7, 170, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -10, -7, 170, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -10, -7, 170, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -10, -7, 170, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -10, -7, 170, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -10, -7, 170, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -10, -7, 170, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -10, -7, 170, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -10, -7, 170, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -10, -7, 170, a)) else print_endline("42");;
let a = add (-2,8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -2, 8, 171, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -2, 8, 171, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -2, 8, 171, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -2, 8, 171, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -2, 8, 171, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -2, 8, 171, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -2, 8, 171, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -2, 8, 171, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -2, 8, 171, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -2, 8, 171, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -2, 8, 171, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -2, 8, 171, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -2, 8, 171, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -2, 8, 171, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -2, 8, 171, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -2, 8, 171, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -2, 8, 171, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -2, 8, 171, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -2, 8, 171, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, -2, 8, 171, a)) else print_endline("42");;
let a = remove (2,7)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 2, 7, 172, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 2, 7, 172, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, 2, 7, 172, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 2, 7, 172, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 2, 7, 172, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 2, 7, 172, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 2, 7, 172, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 2, 7, 172, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 2, 7, 172, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 2, 7, 172, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 2, 7, 172, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 2, 7, 172, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 2, 7, 172, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 2, 7, 172, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 2, 7, 172, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 2, 7, 172, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, 2, 7, 172, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, 2, 7, 172, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 2, 7, 172, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 2, 7, 172, a)) else print_endline("42");;
let a = add (5,8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 5, 8, 173, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 5, 8, 173, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, 5, 8, 173, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, 5, 8, 173, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 5, 8, 173, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 5, 8, 173, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 5, 8, 173, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, 5, 8, 173, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 5, 8, 173, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 5, 8, 173, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 5, 8, 173, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 5, 8, 173, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, 5, 8, 173, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 5, 8, 173, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 5, 8, 173, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, 5, 8, 173, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 5, 8, 173, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 5, 8, 173, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 5, 8, 173, a)) else  if not( (mem (9) a = true) && check a) then raise (Exc (9, 5, 8, 173, a)) else print_endline("42");;
let a = remove (-5,9)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, 9, 174, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, 9, 174, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -5, 9, 174, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -5, 9, 174, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -5, 9, 174, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -5, 9, 174, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -5, 9, 174, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -5, 9, 174, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -5, 9, 174, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -5, 9, 174, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -5, 9, 174, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -5, 9, 174, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -5, 9, 174, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -5, 9, 174, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -5, 9, 174, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -5, 9, 174, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -5, 9, 174, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -5, 9, 174, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -5, 9, 174, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -5, 9, 174, a)) else print_endline("42");;
let a = add (-3,2)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -3, 2, 175, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -3, 2, 175, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -3, 2, 175, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -3, 2, 175, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -3, 2, 175, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -3, 2, 175, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -3, 2, 175, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -3, 2, 175, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -3, 2, 175, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -3, 2, 175, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -3, 2, 175, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -3, 2, 175, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -3, 2, 175, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -3, 2, 175, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -3, 2, 175, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -3, 2, 175, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -3, 2, 175, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -3, 2, 175, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -3, 2, 175, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -3, 2, 175, a)) else print_endline("42");;
let a = remove (-9,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -9, 5, 176, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -9, 5, 176, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -9, 5, 176, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -9, 5, 176, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -9, 5, 176, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -9, 5, 176, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -9, 5, 176, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -9, 5, 176, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -9, 5, 176, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -9, 5, 176, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -9, 5, 176, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -9, 5, 176, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -9, 5, 176, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -9, 5, 176, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, -9, 5, 176, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, -9, 5, 176, a)) else  if not( (mem (6) a = false) && check a) then raise (Exc (6, -9, 5, 176, a)) else  if not( (mem (7) a = false) && check a) then raise (Exc (7, -9, 5, 176, a)) else  if not( (mem (8) a = false) && check a) then raise (Exc (8, -9, 5, 176, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -9, 5, 176, a)) else print_endline("42");;
let a = add (-8,8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -8, 8, 177, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -8, 8, 177, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -8, 8, 177, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -8, 8, 177, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -8, 8, 177, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -8, 8, 177, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -8, 8, 177, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -8, 8, 177, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -8, 8, 177, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -8, 8, 177, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -8, 8, 177, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -8, 8, 177, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -8, 8, 177, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -8, 8, 177, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -8, 8, 177, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -8, 8, 177, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -8, 8, 177, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -8, 8, 177, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -8, 8, 177, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -8, 8, 177, a)) else print_endline("42");;
let a = remove (-2,3)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -2, 3, 178, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -2, 3, 178, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -2, 3, 178, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -2, 3, 178, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -2, 3, 178, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -2, 3, 178, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -2, 3, 178, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -2, 3, 178, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -2, 3, 178, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -2, 3, 178, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -2, 3, 178, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -2, 3, 178, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -2, 3, 178, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -2, 3, 178, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -2, 3, 178, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -2, 3, 178, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -2, 3, 178, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -2, 3, 178, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -2, 3, 178, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -2, 3, 178, a)) else print_endline("42");;
let a = add (-5,-2)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -5, -2, 179, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -5, -2, 179, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -5, -2, 179, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -5, -2, 179, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -5, -2, 179, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -5, -2, 179, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -5, -2, 179, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -5, -2, 179, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -5, -2, 179, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -5, -2, 179, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -5, -2, 179, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -5, -2, 179, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -5, -2, 179, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -5, -2, 179, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -5, -2, 179, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -5, -2, 179, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -5, -2, 179, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -5, -2, 179, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -5, -2, 179, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -5, -2, 179, a)) else print_endline("42");;
let a = remove (-9,1)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -9, 1, 180, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -9, 1, 180, a)) else  if not( (mem (-8) a = false) && check a) then raise (Exc (-8, -9, 1, 180, a)) else  if not( (mem (-7) a = false) && check a) then raise (Exc (-7, -9, 1, 180, a)) else  if not( (mem (-6) a = false) && check a) then raise (Exc (-6, -9, 1, 180, a)) else  if not( (mem (-5) a = false) && check a) then raise (Exc (-5, -9, 1, 180, a)) else  if not( (mem (-4) a = false) && check a) then raise (Exc (-4, -9, 1, 180, a)) else  if not( (mem (-3) a = false) && check a) then raise (Exc (-3, -9, 1, 180, a)) else  if not( (mem (-2) a = false) && check a) then raise (Exc (-2, -9, 1, 180, a)) else  if not( (mem (-1) a = false) && check a) then raise (Exc (-1, -9, 1, 180, a)) else  if not( (mem (0) a = false) && check a) then raise (Exc (0, -9, 1, 180, a)) else  if not( (mem (1) a = false) && check a) then raise (Exc (1, -9, 1, 180, a)) else  if not( (mem (2) a = false) && check a) then raise (Exc (2, -9, 1, 180, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, -9, 1, 180, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -9, 1, 180, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -9, 1, 180, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -9, 1, 180, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -9, 1, 180, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -9, 1, 180, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -9, 1, 180, a)) else print_endline("42");;
let a = add (-8,8)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, -8, 8, 181, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, -8, 8, 181, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, -8, 8, 181, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, -8, 8, 181, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, -8, 8, 181, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, -8, 8, 181, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, -8, 8, 181, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, -8, 8, 181, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, -8, 8, 181, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, -8, 8, 181, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, -8, 8, 181, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, -8, 8, 181, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, -8, 8, 181, a)) else  if not( (mem (3) a = true) && check a) then raise (Exc (3, -8, 8, 181, a)) else  if not( (mem (4) a = true) && check a) then raise (Exc (4, -8, 8, 181, a)) else  if not( (mem (5) a = true) && check a) then raise (Exc (5, -8, 8, 181, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, -8, 8, 181, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, -8, 8, 181, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, -8, 8, 181, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, -8, 8, 181, a)) else print_endline("42");;
let a = remove (3,5)a ;;  if not( (mem (-10) a = false) && check a) then raise (Exc (-10, 3, 5, 182, a)) else  if not( (mem (-9) a = false) && check a) then raise (Exc (-9, 3, 5, 182, a)) else  if not( (mem (-8) a = true) && check a) then raise (Exc (-8, 3, 5, 182, a)) else  if not( (mem (-7) a = true) && check a) then raise (Exc (-7, 3, 5, 182, a)) else  if not( (mem (-6) a = true) && check a) then raise (Exc (-6, 3, 5, 182, a)) else  if not( (mem (-5) a = true) && check a) then raise (Exc (-5, 3, 5, 182, a)) else  if not( (mem (-4) a = true) && check a) then raise (Exc (-4, 3, 5, 182, a)) else  if not( (mem (-3) a = true) && check a) then raise (Exc (-3, 3, 5, 182, a)) else  if not( (mem (-2) a = true) && check a) then raise (Exc (-2, 3, 5, 182, a)) else  if not( (mem (-1) a = true) && check a) then raise (Exc (-1, 3, 5, 182, a)) else  if not( (mem (0) a = true) && check a) then raise (Exc (0, 3, 5, 182, a)) else  if not( (mem (1) a = true) && check a) then raise (Exc (1, 3, 5, 182, a)) else  if not( (mem (2) a = true) && check a) then raise (Exc (2, 3, 5, 182, a)) else  if not( (mem (3) a = false) && check a) then raise (Exc (3, 3, 5, 182, a)) else  if not( (mem (4) a = false) && check a) then raise (Exc (4, 3, 5, 182, a)) else  if not( (mem (5) a = false) && check a) then raise (Exc (5, 3, 5, 182, a)) else  if not( (mem (6) a = true) && check a) then raise (Exc (6, 3, 5, 182, a)) else  if not( (mem (7) a = true) && check a) then raise (Exc (7, 3, 5, 182, a)) else  if not( (mem (8) a = true) && check a) then raise (Exc (8, 3, 5, 182, a)) else  if not( (mem (9) a = false) && check a) then raise (Exc (9, 3, 5, 182, a)) else print_endline("42");;

let a = empty;;
assert (is_empty a);;
assert (below 6 a = 0);;
let a = add (3, 5) a;;
assert (elements a =  [(3, 5)]);;
let a = add (7, 9) a;;
assert (below 7 a = 4);;
let a = add (6, 6) a;;
assert (elements a = [(3, 9)]);;
let a = remove (6, 6) a;;
assert (not (mem 6 a));;
assert (mem 8 a);;
assert (not (mem min_int a));;
let b = remove (-32, -16) a;;
assert (not (a == b));; (* prosty test na funkcyjność *)
let a = add (-32, -16) b;;
assert (mem (-30) a);;
assert (elements a = [(-32, -16); (3, 5); (7, 9)]);;
let (_, x, _) = split 0 a;;
assert (not x);;
let a = add (min_int, max_int) a;;
let (_, x, _) = split 0 a;;
assert x;;
let (_, x, _) = split (-42) a;;
assert x;;
assert (elements a = [(min_int, max_int)]);;

 assert (below 700 a = max_int);;
assert (not (is_empty a));;
let a = remove (min_int, 0) a;;
assert (below 700 a = 700);;
assert (below (min_int + 5) a = 0);;
let a = remove (10, max_int) a;;
let (x, y, z) = split max_int a in printset x; Printf.printf "%d!" (below max_int a);  assert (below max_int a = 9);;
assert (not (mem 0 a));;
let a = remove (2, 2) a;;
assert (not (is_empty a));;
assert (not (mem 2 a));;
assert (below 3 a = 2);;
let a = remove (4, 4) a;;
let (_, x, _) = split 2 a;;
assert (not x);;
let a = remove (6, 6) a;;
let a = remove (8, 9) a;;
assert (not (mem 8 a));;
assert (elements a = [(1, 1); (3, 3); (5, 5); (7, 7)]);;
let a = add (9, 9) a;;
assert (elements a = [(1, 1); (3, 3); (5, 5); (7, 7); (9, 9)]);;
assert (fold (fun (x, y) acc -> x * y + acc) a 42 = 207);;

let a = add (0, 5) empty;;
let a = add (7, 8) a;;
let a = add (-3, -3) a;;
let a = add (10, 13) a;;
assert(elements a = [(-3, -3); (0, 5); (7, 8); (10, 13)]);;
Printf.printf "%d=9" (below 8 a); assert(below 8 a = 9);;
let b = add (6, 6) a;;
let b = remove (6, 6) b;;
let b = add (-100, -5) b;;
let b = add (-4, 6) b;;
assert(elements b = [(-100, 8); (10, 13)]);;
assert(below 10 b = 110);;
let c = remove (2, 10) a;;
assert(elements c = [(-3, -3); (0, 1); (11, 13)]);;
assert(below 12 c = 5);;
print_endline "ok";;

let a = empty
let a = add (-20, 5) a
let a = add (6, 18) a
let a = add (4, 10) a
let a = add (14, 16) a
let a = remove (-18, 14) a
let a = remove (5, 17) a;;
assert(mem 14 a = false);;
let a = add (-4, 9) a;;
assert(mem 16 a = false);;
assert(mem (-14) a = false);;
assert(mem 10 a = false);;
let a = remove (-9, 10) a;;
let a = add (-6, 7) a;;
let a = add (-2, 7) a;;
let a = add (-12, 17) a;;
let a = add (-13, 8) a;;
let a = add (-13, -2) a;;
assert(mem 11 a = true);;
assert(elements a = [(-20, -19); (-13, 18)]);;
print_endline "ok";;



*)
